rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isCustomer() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'customer';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - Admin can access all, users can access their own
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Services collection - Public read access, admin-only write operations
    match /services/{serviceId} {
      allow read: if true; // Allow public read access for guests and authenticated users
      allow write: if isAdmin();
      allow create: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Categories collection - Public read access, admin-only write operations
    match /categories/{categoryId} {
      allow read: if true; // Allow public read access for guests and authenticated users
      allow write: if isAdmin();
      allow create: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Bookings collection - Customers can access their own, admin can access all
    match /bookings/{bookingId} {
      allow read: if isOwner(resource.data.customerId) || isAdmin();
      allow write: if isOwner(resource.data.customerId) || isAdmin();
      allow create: if isCustomer() && request.auth.uid == request.resource.data.customerId;
    }
    
           // Reviews collection - Customers can access their own, admin can access all
           match /reviews/{reviewId} {
             allow read: if isAuthenticated();
             allow write: if isOwner(resource.data.userId) || isAdmin();
             allow create: if isCustomer() && request.auth.uid == request.resource.data.userId;
           }

    // Salon Hours collection - Public read access for booking availability, admin-only write operations
    match /salonHours/{hoursId} {
      allow read: if true; // Allow public read access for customers to check availability
      allow write: if isAdmin();
      allow create: if isAdmin();
      allow delete: if isAdmin();
    }

    // Salon Settings collection - Public read access for default schedule, admin-only write operations
    match /salonSettings/{settingsId} {
      allow read: if true; // Allow public read access for default schedule
      allow write: if isAdmin();
      allow create: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}